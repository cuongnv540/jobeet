<?php

/**
 * BaseExtendedJobInformation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $job_id
 * @property string $title
 * @property string $content
 * @property string $created_by
 * @property string $updated_by
 * @property JobeetJob $JobeetJob
 * 
 * @method integer                getId()         Returns the current record's "id" value
 * @method integer                getJobId()      Returns the current record's "job_id" value
 * @method string                 getTitle()      Returns the current record's "title" value
 * @method string                 getContent()    Returns the current record's "content" value
 * @method string                 getCreatedBy()  Returns the current record's "created_by" value
 * @method string                 getUpdatedBy()  Returns the current record's "updated_by" value
 * @method JobeetJob              getJobeetJob()  Returns the current record's "JobeetJob" value
 * @method ExtendedJobInformation setId()         Sets the current record's "id" value
 * @method ExtendedJobInformation setJobId()      Sets the current record's "job_id" value
 * @method ExtendedJobInformation setTitle()      Sets the current record's "title" value
 * @method ExtendedJobInformation setContent()    Sets the current record's "content" value
 * @method ExtendedJobInformation setCreatedBy()  Sets the current record's "created_by" value
 * @method ExtendedJobInformation setUpdatedBy()  Sets the current record's "updated_by" value
 * @method ExtendedJobInformation setJobeetJob()  Sets the current record's "JobeetJob" value
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseExtendedJobInformation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('extended_job_information');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'comment' => 'ID',
             'length' => 8,
             ));
        $this->hasColumn('job_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'comment' => 'reference to jobbet_job.id',
             'length' => 8,
             ));
        $this->hasColumn('title', 'string', 1000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'title',
             'length' => 1000,
             ));
        $this->hasColumn('content', 'string', 1000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'content',
             'length' => 1000,
             ));
        $this->hasColumn('created_by', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => '作成者',
             'length' => 32,
             ));
        $this->hasColumn('updated_by', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => '更新者',
             'length' => 32,
             ));


        $this->index('deleted_at_idx', array(
             'fields' => 
             array(
              0 => 'deleted_at',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('JobeetJob', array(
             'local' => 'job_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}